services:
  traefik:
    image: traefik:v2.10.4
    ports:
      # Exposes port 80 for incomming web requests
      - 80:80
      # The Web UI port http://0.0.0.0:8080 (enabled by --api.insecure=true)
      - 8080:8080
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./app/traefik/conf/traefik.yml:/etc/traefik/traefik.yml
      - ./app/traefik/letsencrypt:/letsencrypt

  jenkins:
    image: jenkins/jenkins:lts
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jenkins.rule=Host(`$JENKINS_DNS`)"
      - "traefik.http.routers.jenkins.entrypoints=websecure"
      - "traefik.http.routers.jenkins.service=jenkins"
      - "traefik.http.services.jenkins.loadbalancer.server.port=8080"
    volumes:
      - jenkins_home:/var/jenkins_home
  
  ssh-agent:
    image: jenkins/ssh-agent

  nexus:
    image: sonatype/nexus3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nexus.rule=Host(`$NEXUS_DNS`)"
      - "traefik.http.routers.nexus.entrypoints=websecure"
      - "traefik.http.routers.nexus.service=nexus"
      - "traefik.http.services.nexus.loadbalancer.server.port=8081"
    volumes:
      - "nexus:/nexus-data"

  sonarqube:
    image: sonarqube:lts-community
    restart: unless-stopped
    environment: 
      - "SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=$SONAR_ES_BOOTSTRAP_CHECKS_DISABLE"
      - "SONAR_TELEMETRY_ENABLE=$SONAR_TELEMETRY_ENABLE"
      - "SONAR_JDBC_URL=$SONAR_JDBC_URL"
      - "SONAR_JDBC_USERNAME=$SONAR_JDBC_USERNAME"
      - "SONAR_JDBC_PASSWORD=$SONAR_JDBC_PASSWORD"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarqube.rule=Host(`$SONARQUBE_DNS`)"
      - "traefik.http.routers.sonarqube.entrypoints=websecure"
      - "traefik.http.routers.sonarqube.service=sonarqube"
      - "traefik.http.services.sonarqube.loadbalancer.server.port=9000"
    volumes: 
      - sonarqube:/opt/sonarqube
  
  gogs:
    image: gogs/gogs
    environment:
        - RUN_CROND=$RUN_CROND
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gogs.rule=Host(`$GOGS_DNS`)"
      - "traefik.http.routers.gogs.entrypoints=websecure"
      - "traefik.http.routers.gogs.service=gogs"
      - "traefik.http.services.gogs.loadbalancer.server.port=3000"
    volumes:
      - gogs:/data

  postgres:
    image: postgres:15.4
    environment:
      - "POSTGRES_PASSWORD=$POSTGRES_PASSWORD"
    volumes:
      - ./app/postgres/initdb:/docker-entrypoint-initdb.d
      - postgres:/var/lib/postgresql

volumes:
  jenkins_home:
  nexus:
  sonarqube:
  gogs:
  postgres: